function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 10-Mar-2023 11:39:19.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx8 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;0;0;0;0;0];
x1_step1.gain = [2;2;2;2;2;2;2;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.8867738302760050928;-1.2929687383895862585;-1.243530092434020462;-0.5157138710707135365;0.091217625642136701547;-0.14386320125312787588;0.81216952826540356192;-0.9914617807962335938;1.3619282819094189474;-2.3980163294020431231];
IW1_1 = [0.51428791864945055945 0.042622462239647600224 -0.75083533335751062587 -0.79105449535136362904 1.0446084361462801837 0.92296915222101783005 -0.31041700717040204838 0.2540318361591871188;-0.0021369336516177950269 0.094454251063063862648 -0.54688287507060417969 -0.022246256775464136324 -0.91224352119392337901 -0.96897077397245967578 -0.90640812842296181184 0.72899928995889462513;1.0513334887187832933 -0.45890917561448907325 -0.64545550262298723165 0.71991958338534922657 -0.51797078815676356189 0.56438110951184505826 0.30813149552873408954 -0.11363367810045429951;-0.0061509859304760688969 0.37344681318867045672 -0.0087138943369158561314 0.66591663698873693189 -1.2057065672451412475 1.123491441905077215 -0.44540617705432794526 0.061802030803176311036;-0.64930269506740412311 0.014645675600891222556 -0.36280853314290356648 -0.47333544044303876852 -0.74743715833609991606 1.1407168613755815922 -0.34282976210353288682 -0.87297811418596393818;-1.0162211985276481396 -0.93942881003999678668 -0.18865081683495280029 -0.67171746925980513332 0.2370696386542085754 0.83937609110122235467 -0.069126368595876175327 -0.4092048968411313159;0.98159580066159757283 -0.19560855801883492155 0.86831794578970644682 0.72968060076420604432 0.72744045241063848284 0.66440076416108329038 -0.48366376484086520682 0.24356012168053792211;-0.025804074798520509892 -0.8757813300005107271 -0.019989730178564132923 0.53052408020736729899 -1.1531405000681416162 0.48289554337208323576 0.57869661827045471014 -0.30113441654402184344;0.76751005605151212396 -0.64266465220404733749 -0.079772411746460852866 -0.21492063215539106147 0.82364074072305437646 -0.56939808510880407511 -1.1071358902125916224 0.74119950715321247792;-0.16462641198483007887 -0.22162009760786682833 -0.18182398216291487114 -0.78900103635757179443 -0.012873926645146110959 -0.39448611572513531121 0.9262356807297503769 -0.21524092286952967168];

% Layer 2
b2 = [0.38280346205848103658;0.047299161886895854656;0.58299017745036785243;0.47497133018495635293;-0.22136904981772664858;-0.9450962125894932786;-0.72518068933149426591;-0.25383577548296321069];
LW2_1 = [0.36742922033960268013 -0.32622252752594294023 -0.44327713542534596947 -0.033275537282961786811 -0.80745414733626930115 0.20572530938310301662 0.54969321653115243986 -0.51919319705598299119 -0.3683875466845165092 -0.13889149709244874575;0.35870177397940083974 -0.82513920091223691422 0.73753499388976107021 -0.84412788265055016534 -0.58829849970764735989 0.074717459879732814332 0.33065535328066736342 0.48801038010335801021 0.26611128377154874558 -0.60349556182389163528;0.51304957714383414569 -0.25100698802090626316 0.60694699046042810409 0.044385789613750101235 -0.23146325113678420382 0.42388981551636206735 0.096011212787938227109 -0.44663897255249473961 0.36351475696794544046 0.32022288223747691349;1.0407424335861872322 0.02052920139416640477 0.24217182399142705984 -0.1949067396207508629 -0.6419502278737695411 -0.40673217186553167757 -0.99407795871414328381 -0.046114109731442677609 0.084950800577152971171 -0.13074216959447673703;0.1011071472236275276 -0.099478088647062562488 0.95013783278011276767 -0.14386058042095173359 0.28565776479999943627 -0.98951271267978013757 -0.57651647140674988634 0.54694676617310178379 0.37341139552877800067 0.0055175061814415268802;-0.22399294187994531202 0.031530914418584417291 -0.83066542354992745079 -0.91087996615376176646 -0.88941790575886525705 -0.82995651484430044142 0.2748674652046502187 -0.81384796446199569875 0.25291357923909740801 0.55607390462596995029;-0.056128583180804665631 -0.40045425333985984473 0.23650332431334597505 0.52361197999408337633 -0.75274506040642530369 -0.37529858580278024904 0.52286397522899163981 -0.99165544755560963708 0.87090309918836106284 -0.88561860341887455039;0.23104731492553098882 -1.0571874302584127747 0.012481970650600096584 -0.52830142819847347724 0.11733766214241481141 -0.92443880844763282045 0.36615387670215249205 -0.13741275771766511826 -0.073238904730448181613 -0.80768159371432790561];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
else
    a = iSoftmaxApplyCPU(n);
end
end
function a = iSoftmaxApplyCPU(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numerator = exp(n);
denominator = sum(numerator,1);
denominator(denominator == 0) = 1;
a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
nmax = max(n,[],1);
numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
denominator = sum(numerator,1);
a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
if (denominator == 0)
    a = numerator;
else
    a = numerator ./ denominator;
end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
